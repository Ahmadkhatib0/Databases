///    SET IS ABOUT UNIQUENESS,  LIKE UNIQUE VALUES IN A SQL COLUMN,   return 1 on succes , 0 on failure 
SADD  colors red                                   // add 
SMEMBERS  colors                                   //get all sets 
SADD colors:1 red blue green                       //add multiple 
SUNION colros:1 colors:2                           //get all unique elements from all sets 
SINTER colros:1 colors:2                           //return all elements that existed in all sets 
SDIFF  colors:1 colors:2                           //return elements that only exist in only one set (comparing from left side) 
SINTERSTORE colors:result colors:1 colors:2        //insert diff of colors:1 and colors:2 in colors:result 
SISMEMBER  colors:result blue                      //check if blue exists 
SMISMEMBER colors:1 red green blue                 //checks for multiple set's elements 
SCARD  colros:1                                    //number of elements in set 
SREM   colors:1 red                                //remove 
SSCAN  colors:1 0 COUNT 33                         //zero is the cursor id, this will return elements, and the next 
//page cursor number,   that thing we can to use later to fetch thing after the previous ones, (LIKE LIMIT IN SQ)




////////////////////////////////////// SORTED SETS /////////////////////////// 
// in sorted sets key called a MEMBER and value called a SCORE,, 
// the structure to work with sorted sets is like e.g : ZADD setsName score member    // so the value first not the key
// score can only be number 
ZADD  products 55 monitor                              //add 
ZSCORE products monitor                                //get 
ZREM products monitor                                  //remove a member 
ZCARD products                                         //count 
ZCOUNT products 0 40                                   //how many members there are between 0 and 50 (up to and including )
ZCOUNT products (0 (50                                 //greeter than zero and less than 50 
ZCOUNT products 4 +inf                                 //greeter than 4 till infinity
ZCOUNT products -inf 99                                //from the negative infinity up to 99
ZPOPMIN products 3                                     //delete lowest 3 score and return them 
ZPOPMAX products 3                                     //delete highest 3 score and return them 
//// ZPOPMAX AND ZPOPMAX without number delte the lowest or the highest 
ZINCRBY products 44  or -44 keyboard                   //update a member, 
ZRANGE products 5 9  [WITHSCROES]                      //get members between tow indexes 
ZRANGE products -inf 44 BYSCORE WITHSCROES             //get members between tow scores 
ZRANGE products 1 2 REV LIMIT 1 3                      //reverse sets, get members between 1 and 2 index, 
// and for limit skip the first member and give me the next tow 
//LIMIT is usualy Used with BYSCORE , for example for pagination purposes 
