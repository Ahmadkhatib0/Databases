---
# mode:
#   type: Standalone
#   repository:
#     type: File
#   overwrite: true

# enable cluster mode in a production environment
---
mode:
  type: Cluster
  repository:
    type: ZooKeeper
    props:
      namespace: governance_ds
      server-lists: localhost:2181
      retryIntervalMilliseconds: 500
      timeToLiveSeconds: 60
      maxRetries: 3
      operationTimeoutMilliseconds: 500
  overwrite: false
  # If users need to use local configuration to initialize or overwrite the
  # configuration in the cluster  they can configure overwrite: true.


# schemaName: proxy_db
# dataSources:
#   postgres:
#     url: jdbc:postgresql://127.0.0.1:5432/postgres
#     username: postgres
#     password: postgres
#     connectionTimeoutMilliseconds: 30000
#     idleTimeoutMilliseconds: 60000
#     maxLifetimeMilliseconds: 1800000
#     maxPoolSize: 50
#     minPoolSize: 1
# rules: []

# dataSources:
#   ds_0:
#     url: jdbc:mysql://127.0.0.1:3306/demo_ds_0?serverTimezone=UTC&useSSL=false
#     username: root
#     password:
#     connectionTimeoutMilliseconds: 30000
#     idleTimeoutMilliseconds: 60000
#     maxLifetimeMilliseconds: 1800000
#     maxPoolSize: 50
#     minPoolSize: 1
#   ds_1:
#     url: jdbc:mysql://127.0.0.1:3306/demo_ds_1?serverTimezone=UTC&useSSL=false
#     username: root
#     password:
#     connectionTimeoutMilliseconds: 30000
#     idleTimeoutMilliseconds: 60000
#     maxLifetimeMilliseconds: 1800000
#     maxPoolSize: 50
#     minPoolSize: 1

dataSources:
  ds_0:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    jdbcUrl: jdbc:mysql://127.0.0.1:13306/demo_ds?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
    username: root
    password:
  ds_1:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    jdbcUrl: jdbc:mysql://127.0.0.1:13307/demo_ds?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
    username: root
    password:

rules:
  # - !AUTHORITY
  #   users:
  #     - proxy_user@%:proxy_password
  #   provider:
  #     type: ALL_PRIVILEGES_PERMITTED
  - !SHARDING
    tables:
      t_order:
        actualDataNodes: ds_${0..1}.t_order
        keyGenerateStrategy:
          column: order_id
          keyGeneratorName: snowflake
      t_order_item:
        actualDataNodes: ds_${0..1}.t_order_item
        keyGenerateStrategy:
          column: order_item_id
          keyGeneratorName: snowflake
    bindingTables:
      - t_order,t_order_item
    defaultDatabaseStrategy:
      standard:
        shardingColumn: user_id
        shardingAlgorithmName: database-inline
    defaultTableStrategy:
      none:

    shardingAlgorithms:
      database-inline:
        type: INLINE
        props:
          algorithm-expression: ds_${user_id % 2}

    keyGenerators:
      snowflake:
        type: SNOWFLAKE
        props:
          worker-id: 123

props:
  sql-show: false
