
Data engineering is a set of operations aimed at creating interfaces and mechanisms for the flow and 
  access of information. It takes dedicated specialists—data engineers— to maintain data so that it 
  remains available and usable by others. In short, data engineers set up and operate the organization’s 
  data infrastructure, preparing it for further analysis by data analysts and scientists.

The first type of data engineering is SQL-focused. The work and primary storage of the data is in 
  relational databases. All of the data processing is done with SQL or a SQL-based language. Sometimes, 
  this data processing is done with an ETL tool.2 The second type of data engineering is Big 
  Data–focused. The work and primary storage of the data is in Big Data technologies like Hadoop, 
  Cassandra, and HBase. All of the data processing is done in Big Data frameworks like MapReduce, 
  Spark, and Flink. While SQL is used, the primary processing is done with programming languages 
  like Java, Scala, and Python.

The stages of the data engineering lifecycle are as follows:
 • • Generation
 • • Storage
 • • Ingestion
 • • Transformation
 • • Serving

Data Maturity and the Data Engineer
  Data maturity is the progression toward higher data utilization, capabilities, and integration across 
  the organization, but data maturity does not simply depend on the age or revenue of a company. An 
  early-stage startup can have greater data maturity than a 100-year-old company with annual revenues 
  in the billions. What matters is the way data is leveraged as a competitive advantage.

In data science, there’s the notion of type A and type B data scientists.10 Type A data scientists—where 
  A stands for analysis—focus on understanding and deriving insight from data. Type B data scientists 
  where B stands for building—share similar backgrounds as type A data scientists and possess strong 
  programming skills. The type B data scientist builds systems that make data science work in 
  production. Borrowing from this data scientist continuum,

A similar distinction (from the data science) for two types of data engineers:
Type A data engineers
  A stands for abstraction. In this case, the data engineer avoids undifferentiated heavy lifting, 
  keeping data architecture as abstract and straightforward as pos‐ sible and not reinventing the 
  wheel. Type A data engineers manage the data engineering lifecycle mainly by using entirely 
  off-the-shelf products, managed services, and tools. Type A data engineers work at companies across 
  industries and at all levels of data maturity.

Type B data engineers
  B stands for build. Type B data engineers build data tools and systems that scale and leverage a 
  company’s core competency and competitive advantage. In the data maturity range, a type B data 
  engineer is more commonly found at companies in stage 2 and 3 (scaling and leading with data), 
  or when an initial data use case is so unique and mission-critical that custom data tools are 
  required to get started.

An external-facing data engineer typically aligns with the users of external-facing
  applications, such as social media apps, Internet of Things (IoT) devices, and ecom‐
  merce platforms. This data engineer architects, builds, and manages the systems that
  collect, store, and process transactional and event data from these applications. The
  systems built by these data engineers have a feedback loop from the application to the
  data pipeline, and then back to the application 

An internal-facing data engineer typically focuses on activities crucial to the needs of the business 
  and internal stakeholders. Examples include creating and maintaining data pipelines and data warehouses 
  for BI dashboards, reports, business processes, data science, and ML models.

The data engineer is a hub between data producers, such as software engineers, data architects, 
  and DevOps or site-reliability engineers (SREs), and data consumers, such as data analysts, data 
  scientists, and ML engineers. In addition, data engineers will interact with those in operational 
  roles, such as DevOps engineers.



